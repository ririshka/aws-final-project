AWSTemplateFormatVersion: "2010-09-09"
Description: "This is my VPC created by Aiperi Mairambekova"
Parameters:
  TagsValue:
    Type: String
    Default: "Aiperi Mairambekova"
  VPCcidr:
    Type: String
    Default: 10.4.0.0/16
  InstanceTypeParameter:
    Type: String
    Default: "t2.micro"
    AllowedValues:
      - "t2.micro"
      - "t3.micro"
    Description: Choose instance type (t2.micro or t3.micro)
Mappings:
  AmiMapping:
    us-east-1:
      AmiId: "ami-0d7a109bf30624c99"
    us-west-2: 
      AmiId: "ami-07bff6261f14c3a45"
Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCcidr
      InstanceTenancy: "default"
      Tags:
        - Key: "Owner"
          Value: !Ref TagsValue
  
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: LaunchTemplate
      LaunchTemplateData:
        ImageId: !FindInMap [ AmiMapping, !Ref "AWS::Region", AmiId ]
        InstanceType: !Ref InstanceTypeParameter
        SecurityGroupIds: [!Ref SecurityGroup]
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo yum install -y httpd
            sudo systemctl start httpd
            sudo systemctl enable httpd
            sudo echo "<h1> Hello, this is Aiperi Mairambekova </h1>" > /var/www/html/index.html

  SecurityGroup: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for lauch template
      GroupName: riri-sg
      SecurityGroupIngress: 
         - CidrIp: 0.0.0.0/0
           FromPort: 22
           IpProtocol: tcp
           ToPort: 22
         - CidrIp: 0.0.0.0/0
           FromPort: 80
           IpProtocol: tcp
           ToPort: 80
      VpcId: !Ref myVPC

  TargetGroups:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref myVPC
      TargetType: instance
      HealthCheckPath: /index.html
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Owner
          Value: !Ref TagsValue

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      SecurityGroups:
      - !Ref SecurityGroup
      Subnets: 
      - !Ref PublicSubnet1
      - !Ref PublicSubnet2
      - !Ref PrivateSubnet1
      - !Ref PrivateSubnet2
      Tags:
        - Key: Name
          Value: ChineloCloudFormationALB
Outputs: {}
